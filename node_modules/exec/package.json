{
  "name": "exec",
  "description": "Call a child process with the ease of exec and safety of spawn",
  "author": {
    "name": "Dave Eddy",
    "email": "dave@daveeddy.com",
    "url": "http://www.daveeddy.com"
  },
  "version": "0.0.4",
  "repository": {
    "url": "https://github.com/bahamas10/node-exec.git",
    "type": "git"
  },
  "main": "index.js",
  "scripts": {
    "test": "for f in examples/*.js; do echo \"$f\"; node \"$f\" || exit 1; echo; done; echo 'Passed'"
  },
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "bin": {},
  "engines": {
    "node": "*"
  },
  "keywords": [
    "exec",
    "spawn",
    "child",
    "wordsplitting",
    "shell"
  ],
  "readme": "exec\n====\n\nCall a child process with the ease of exec and safety of spawn\n\nWhy?\n----\n\nThis module provides the best of both worlds of `spawn` and `exec`\n\nIt will simply return 2 strings containing stdout and stderr\n(like `child_process.exec`), but will take an array of process arguments\n(like `child_process.spawn`) to avoid any nasty shell expansion.\n\nUsage\n-----\n\n``` js\nvar exec = require('exec');\n```\n\nExample\n-------\n\n``` js\nvar exec = require('exec');\n\nexec(['ls', '-lha'], function(err, out, code) {\n  if (err) throw err;\n  process.stdout.write(out);\n  process.exit(code);\n});\n```\n\nThe example above will call `ls -lha` safely, by passing the arguments directly\nto exec(2) without using an shell expansion/word splitting.\n\nIt returns a `child_process.spawn` object, and callbacks with any stdout,\nstderr, and the exit status of the command.  The above example will throw an\nerror if any stderr was produced, otherwise it will print the stdout\nand exit with the exit code of `ls`.\n\nFunctions\n---------\n\n### exec(['args'], [opts], callback)\n\n`opts` is additional options to pass to `child_process.spawn`\n\nInstallation\n------------\n\n    npm install exec\n\nLicense\n-------\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "exec@0.0.4",
  "dist": {
    "shasum": "2e884846fcc5b33bcdf0d7e55f29a43b6bd99832"
  },
  "_from": "exec"
}
